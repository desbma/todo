[workspace]
members = [
    "tasks",
    "todo",
]
resolver = "2"

[workspace.dependencies]
anyhow = { version = "1.0.89", default-features = false, features = ["std", "backtrace"] }
chrono = { version = "0.4.38", default-features = false, features = ["std", "clock"] }
clap = { version = "4.5.19", default-features = false, features = ["std", "color", "help", "usage", "error-context", "suggestions", "derive"] }
console = { version = "0.15.8", default-features = false }
dialoguer = { version = "0.11.0", default-features = false }
fzf-wrapped = { version = "0.1.4", default-features = false }
lazy_static = { version = "1.5.0", default-features = false }
log = { version = "0.4.22", default-features = false, features = ["max_level_trace", "release_max_level_info"] }
notify = { version = "6.1.1", default-features = false }
regex = { version = "1.11.0", default-features = false, features = ["std", "unicode"] }
simple_logger = { version = "5.0.0", default-features = false, features = ["colors", "stderr"] }
strum = { version = "0.26.3", default-features = false, features = ["std", "derive"] }
tempfile = { version = "3.13.0", default-features = false }
wait-timeout = { version = "0.2.0", default-features = false }
zstd = { version = "0.13.2", default-features = false, features = ["fat-lto", "pkg-config"] }

[profile.release]
lto = true
codegen-units = 1
strip = true

[workspace.lints.rust]
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html
explicit_outlives_requirements = "warn"
# missing_docs = "warn"
non_ascii_idents = "deny"
redundant-lifetimes = "warn"
single-use-lifetimes = "warn"
unit-bindings = "warn"
unreachable_pub = "warn"
unused_crate_dependencies = "warn"
unused-lifetimes = "warn"
unused-qualifications = "warn"

[workspace.lints.clippy]
pedantic = { level = "warn", priority = -1 }
assigning_clones = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
# below lints are from clippy::restriction, and assume clippy >= 1.80
# https://rust-lang.github.io/rust-clippy/master/index.html#/?levels=allow&groups=restriction
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
empty_enum_variants_with_brackets = "warn"
expect_used = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
infinite_loop = "warn"
lossy_float_literal = "warn"
# missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
multiple_inherent_impl = "warn"
needless_raw_strings = "warn"
panic = "warn"
pub_without_shorthand = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
semicolon_inside_block = "warn"
shadow_unrelated = "warn"
str_to_string = "warn"
string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
# unwrap_used = "warn"
verbose_file_reads = "warn"
